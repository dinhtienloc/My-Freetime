/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>

#define PLUGIN "Blacklist"
#define VERSION "1.0"
#define AUTHOR "Elo_Cee"

new gBlacklistDir[128], gDir[128] 
// Stored names in "blacklist.txt" text file
new gBLName[32][32]    
// Number of name in Blacklist            
new gBLNum                                


public plugin_init(){
	register_plugin(PLUGIN, VERSION, AUTHOR);
	register_concmd("bl_show", "showBlacklist", ADMIN_KICK, "- list of the forbidden user");
	register_concmd("bl_add", "addBlacklist", ADMIN_KICK, "<name>");
	register_concmd("bl_delete", "deleteBlacklist", ADMIN_KICK, "<name>");
	register_event("HLTV", "newRoundEvent", "a", "1=0", "2=0");
	
}
public plugin_cfg(){
	get_configsdir(gDir, charsmax(gDir)); 
	add(gDir, charsmax(gDir), "/blacklist", 10);
	
	formatex(gBlacklistDir, charsmax(gBlacklistDir), "%s/blacklist.txt", gDir);
	
	if(!dir_exists(gDir)){
		mkdir(gDir);
	}
	
	new line = 0
	new lineData[32]
	new file = fopen(gBlacklistDir, "rt")
		
	if(!file) return PLUGIN_HANDLED
		
	while(!feof(file)){
			
		fgets(file, lineData, charsmax(lineData));
		replace(lineData, charsmax(lineData), "^n", "");
		copy(gBLName[line], charsmax(lineData), lineData);
			
		line++;
	}
	fclose(file);
		
	gBLNum = line;
	return PLUGIN_HANDLED
}

public client_connect(id){
	
	new uName[32], uIp[30]
	
	get_user_name(id, uName, charsmax(uName));
	get_user_ip(id, uIp, charsmax(uIp), 1);
	
	for(new i = 0; i < gBLNum; i++){
		if(equali(gBLName[i], uName)){
			client_cmd(id, "disconnect");
			server_cmd("addip 1 ^"%s^";writeip", uIp);
		}
	}
}
	
public newRoundEvent(){
	
	new player[32], playerName[32], pIp[30]
	new playerCount, k, id
	
	get_players(player, playerCount);
	
	for(new j = 0; j < playerCount; j++){
		id = player[j];
		get_user_name(id, playerName, charsmax(playerName));
		get_user_ip(id, pIp, charsmax(pIp), 1);
		for(k = 0; k < gBLNum; k++){
			if(equali(playerName, gBLName[k])){
				client_cmd(id, "disconnect");
				server_cmd("addip 1 ^"%s^";writeip", pIp);
			}
		}
	}
}

public showBlacklist(id, level, cid){
	
	if(!cmd_access(id, level, cid, 1)){
		return PLUGIN_HANDLED
	}
	
	if(!file_exists(gBlacklistDir)){
		console_print(id, "The Blacklist doesn't exist or there is no name in Blacklist");
	}
	else {
		new line = 0
		new lineData[32]
		new file = fopen(gBlacklistDir, "rt")
		
		if(!file) return PLUGIN_HANDLED
		
		while(!feof(file)){
			
			fgets(file, lineData, charsmax(lineData));
			replace(lineData, charsmax(lineData), "^n", "");
			copy(gBLName[line], charsmax(lineData), lineData);
			
			line++;
		}
		fclose(file);
		
		gBLNum = line;
		
		console_print(id, "^nThe Blacklist:");
		console_print(id, "----------------------------------------------------------------------------------------------------");
		
		for(new i = 0; i < gBLNum; i++){
			if(!equal(gBLName[i], "")){
				console_print(id, "%s", gBLName[i]);
			}
		}
		
		console_print(id, "----------------------------------------------------------------------------------------------------");
		console_print(id, "The player has one of these names will NEVER be allowed to play in this server ^n")
	}	
	return PLUGIN_HANDLED
}

public addBlacklist(id, level, cid){
	
	if(!cmd_access(id, level, cid, 2)){
		return PLUGIN_HANDLED
	}
	
	new arg[32]
	read_argv(1, arg, 31);
	
	console_print(id, "The name ^"%s^" has been added into Blacklist", arg);
	
	write_file(gBlacklistDir, arg, -1);
	
	gBLNum++;
	
	return PLUGIN_HANDLED
}

public deleteBlacklist(id, level, cid){
	
	if(!cmd_access(id, level, cid, 2)){
		return PLUGIN_HANDLED
	}
	
	new arg[32]
	read_argv(1, arg, charsmax(arg));
	
	new line = 0
	new lineData[32]
	new file = fopen(gBlacklistDir, "rt")
	new count = 0
		
	while(!feof(file)){
		
		fgets(file, lineData, charsmax(lineData));
		replace(lineData, charsmax(lineData), "^n", "");
		copy(gBLName[line], charsmax(lineData), lineData);
			
		line++;
	}
	fclose(file);
	
	gBLNum = 0;
	delete_file(gBlacklistDir);
	
	for(new i = 0; i < line; i++){
		if(equali(gBLName[i], arg)){
			continue;
		}
		else{
			if( !equal(gBLName[i], "")){ 
				write_file(gBlacklistDir, gBLName[i], -1);
				count++;
				gBLNum++;
			}
		}
	}
	if(count == line || !charsmax(arg)){
		client_print(id, print_console, "The name you want to delete isn't in the Blacklist. Please check again");
	}
	else{
		client_print(id, print_console, "The name ^"%s^" has been deteled from Blacklist", arg);
	}
	return PLUGIN_HANDLED
}	

	
	

